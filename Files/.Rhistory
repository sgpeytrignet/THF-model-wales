latlong = "+init=epsg:4326"
36*1.03
36*1.04
36*1.05
(38-36)/36*100
(38-36)/36*100
36*1.05
36000*1.05
0.7*35000
x <- c(1:10)
y <- x
x
y
y[1] <- 99
x
y
7*96/4
(99-96)/3
if (!require("pacman")) install.packages("pacman")
pacman::p_load(dplyr,stringr,sp,ggplot2,plyr,readxl,gmodels,Rmisc,DescTools,data.table,
Hmisc,tibble,rgdal,leaflet,rgeos,raster,summarytools,plotly,pbapply)
rm(list = ls()) ##### Clean up the global environment
install.packages(c("data.table", "dplyr", "geosphere", "pacman", "rgeos"))
if (!require("pacman")) install.packages("pacman")
pacman::p_load(dplyr,stringr,sp,ggplot2,plyr,readxl,gmodels,Rmisc,DescTools,data.table,
Hmisc,tibble,rgdal,leaflet,rgeos,raster,summarytools,plotly,pbapply)
rm(list = ls()) ##### Clean up the global environment
if (!require("pacman")) install.packages("pacman")
pacman::p_load(dplyr,stringr,sp,ggplot2,plyr,readxl,gmodels,Rmisc,DescTools,data.table,
Hmisc,tibble,rgdal,leaflet,rgeos,raster,plotly,pbapply,pbmcapply,
ContourFunctions,ROCR,pROC,margins)
rm(list = ls()) ##### Clean up the global environment
################## Load packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(dplyr,stringr,sp,ggplot2,plyr,gmodels,Rmisc,DescTools,data.table,
Hmisc,tibble,rgdal,leaflet,rgeos,raster,plotly,pbapply,pbmcapply,
skimr,ROCR,pROC,margins,jtools)
################## Clean up the global environment
rm(list = ls())
################## Set directory
setwd(str_replace_all(path.expand("~"), "Documents", ""))
setwd("Documents/GitHub/THF-model-wales/Files/")
########################################################################
################### PRE-LOAD USER-WRITTEN FUNCTIONS ####################
########################################################################
################## Functions for geo-spatial analysis
number.within.buffer <- function(k,distpar_km,adminpoints.spdf,interestpoints.spdf){
#Buffer around the selected admin-area
# k=825
# distpar_km=1
# adminpoints.spdf=Survey_postcodes_shp
# interestpoints.spdf=healthcare_resources_shp
aux.refpoint <- adminpoints.spdf[k,] #Isolate the admin-area-center
#Store its coordinates
long.point <- spTransform(aux.refpoint, CRS(latlong))@coords[1,1]
lat.point <- spTransform(aux.refpoint, CRS(latlong))@coords[1,2]
a <- c(long.point,lat.point)
#Create a buffer around the amdin-area-center
aux.refpoint.buffer <- rgeos::gBuffer(aux.refpoint,width=distpar_km*1000,byid=TRUE)
# plot(aux.refpoint.buffer)
# points(aux.refpoint,col="red")
# points(healthcare_resources_shp,col="blue")
#Extract the candidate items in that buffer
aux.overlay <- over(interestpoints.spdf,aux.refpoint.buffer)
candidates.spdf <- interestpoints.spdf[which(!is.na(aux.overlay[,1])),]
N_aux <- nrow(candidates.spdf@data) #How many did we find?
if (N_aux>=1) {
#Extract the info about the candidate items
candidates.data <- candidates.spdf@data
#This matrix will store the information about distances
cand.mat <- as.data.frame(matrix(NA, nrow = N_aux, ncol = 6))
names(cand.mat)=c("pcode","country","buffer.km","N.in.buffer","dist.to.point","name")
#Compute distances to admin-area-centre in a loop
for (s in 1:N_aux){
#Coordinates of candidate point
long.item <- spTransform(candidates.spdf, CRS(latlong))@coords[s,1]
lat.item <- spTransform(candidates.spdf, CRS(latlong))@coords[s,2]
b <- c(long.item,lat.item)
#Compute distance
distKm <- geosphere::distCosine(a, b, r=6378137)/1000
#distMin=(gmapsdistance(origin=m,destination=n,mode="walking")$Time)/60
#Populate the results matrix
cand.mat[s,1]=as.character(aux.refpoint@data$pcode)
cand.mat[s,2]=as.character(aux.refpoint@data$ctry)
cand.mat[s,3]=distpar_km
cand.mat[s,4]=N_aux
cand.mat[s,5]=distKm
cand.mat[s,6]=as.character(candidates.spdf@data$Name[s])
}
#Extract the nearest one, which will be the final output
idx.nearest <- which(cand.mat[,5]==min(cand.mat[,5]))[1]
end.mat <- cand.mat[idx.nearest,]
}
else {
#This matrix will store the results - which are always 0 if there were no candidates
end.mat <- as.data.frame(matrix(NA, nrow = N_aux, ncol = 6))
names(end.mat)=c("pcode","country","buffer.km","N.in.buffer","dist.to.point","name")
end.mat[1,1]=as.character(aux.refpoint@data$pcode)
end.mat[1,2]=as.character(aux.refpoint@data$ctry)
end.mat[1,3]=distpar_km
end.mat[1,4]=N_aux
end.mat[1,5]=NA
end.mat[1,6]=NA
}
return(end.mat)
}
#This function will, for each reference point (e.g.post code), compute the number of items
#(e.g. GP surgery) within a given buffer and find the nearest item
################## Projection codes
ukgrid = "+init=epsg:27700"
latlong="+init=epsg:4326"
###################################################
################### SURVEY DATA ###################
###################################################
################## Import dataset
USoc <- fread("Understanding-Society-Wave8.csv", header=TRUE, sep=",", check.names=T) %>%
filter(.,gor_dv=="[10] wales") %>% as_tibble()
skim(USoc)
##################  10.3% of sample required in-patient treatment the year being surveyed
round(mean(USoc$inpatient_nexttyear)*100,1)
##################  The median age of those who went to hospital was 6 years higher
mu_age <- ddply(USoc, "inpatient_nexttyear", summarise, age.median=median(age))
USoc %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank()) + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") + theme_minimal()
##################  There is, at first sight, no relationship between living in an urban area
##################  and being admitted to hospital
USoc %>% ddply(., "urban", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(urban), y=rate.inpatient, fill=factor(urban))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=2) + labs(fill = "Living in urban area") + xlab("Living in urban area") + ylab("%") + ggtitle("% requiring inpatient care next 12m") + theme_minimal()
#What if we had more precise data on distance to the nearest GP/Hospital, would we find the same thing?
#We don't know where people live in this version of the dataset, but we do have an urban/rural indicator
#So, as a thought experiment, let's impute postcodes to respondents based on that indicator
################## Import directory of postcodes in the UK, Wales
Wales_postcodes_full <- fread("Welsh postcodes.csv",header=TRUE, sep=",", check.names=T)
Wales_postcodes_small <- fread("Welsh postcodes small.csv",header=TRUE, sep=",", check.names=T)
rm(list = ls())
setwd(str_replace_all(path.expand("~"), "Documents", ""))
setwd("Documents/GitHub/THF-model-wales/Files/")
########################################################################
################### PRE-LOAD USER-WRITTEN FUNCTIONS ####################
########################################################################
################## Functions for geo-spatial analysis
number.within.buffer <- function(k,distpar_km,adminpoints.spdf,interestpoints.spdf){
#Buffer around the selected admin-area
# k=825
# distpar_km=1
# adminpoints.spdf=Survey_postcodes_shp
# interestpoints.spdf=healthcare_resources_shp
aux.refpoint <- adminpoints.spdf[k,] #Isolate the admin-area-center
#Store its coordinates
long.point <- spTransform(aux.refpoint, CRS(latlong))@coords[1,1]
lat.point <- spTransform(aux.refpoint, CRS(latlong))@coords[1,2]
a <- c(long.point,lat.point)
#Create a buffer around the amdin-area-center
aux.refpoint.buffer <- rgeos::gBuffer(aux.refpoint,width=distpar_km*1000,byid=TRUE)
# plot(aux.refpoint.buffer)
# points(aux.refpoint,col="red")
# points(healthcare_resources_shp,col="blue")
#Extract the candidate items in that buffer
aux.overlay <- over(interestpoints.spdf,aux.refpoint.buffer)
candidates.spdf <- interestpoints.spdf[which(!is.na(aux.overlay[,1])),]
N_aux <- nrow(candidates.spdf@data) #How many did we find?
if (N_aux>=1) {
#Extract the info about the candidate items
candidates.data <- candidates.spdf@data
#This matrix will store the information about distances
cand.mat <- as.data.frame(matrix(NA, nrow = N_aux, ncol = 6))
names(cand.mat)=c("pcode","country","buffer.km","N.in.buffer","dist.to.point","name")
#Compute distances to admin-area-centre in a loop
for (s in 1:N_aux){
#Coordinates of candidate point
long.item <- spTransform(candidates.spdf, CRS(latlong))@coords[s,1]
lat.item <- spTransform(candidates.spdf, CRS(latlong))@coords[s,2]
b <- c(long.item,lat.item)
#Compute distance
distKm <- geosphere::distCosine(a, b, r=6378137)/1000
#distMin=(gmapsdistance(origin=m,destination=n,mode="walking")$Time)/60
#Populate the results matrix
cand.mat[s,1]=as.character(aux.refpoint@data$pcode)
cand.mat[s,2]=as.character(aux.refpoint@data$ctry)
cand.mat[s,3]=distpar_km
cand.mat[s,4]=N_aux
cand.mat[s,5]=distKm
cand.mat[s,6]=as.character(candidates.spdf@data$Name[s])
}
#Extract the nearest one, which will be the final output
idx.nearest <- which(cand.mat[,5]==min(cand.mat[,5]))[1]
end.mat <- cand.mat[idx.nearest,]
}
else {
#This matrix will store the results - which are always 0 if there were no candidates
end.mat <- as.data.frame(matrix(NA, nrow = N_aux, ncol = 6))
names(end.mat)=c("pcode","country","buffer.km","N.in.buffer","dist.to.point","name")
end.mat[1,1]=as.character(aux.refpoint@data$pcode)
end.mat[1,2]=as.character(aux.refpoint@data$ctry)
end.mat[1,3]=distpar_km
end.mat[1,4]=N_aux
end.mat[1,5]=NA
end.mat[1,6]=NA
}
return(end.mat)
}
#This function will, for each reference point (e.g.post code), compute the number of items
#(e.g. GP surgery) within a given buffer and find the nearest item
################## Projection codes
ukgrid = "+init=epsg:27700"
latlong="+init=epsg:4326"
###################################################
################### SURVEY DATA ###################
###################################################
################## Import dataset
USoc <- fread("Understanding-Society-Wave8.csv", header=TRUE, sep=",", check.names=T) %>%
filter(.,gor_dv=="[10] wales") %>% as_tibble()
skim(USoc)
##################  10.3% of sample required in-patient treatment the year being surveyed
round(mean(USoc$inpatient_nexttyear)*100,1)
##################  The median age of those who went to hospital was 6 years higher
mu_age <- ddply(USoc, "inpatient_nexttyear", summarise, age.median=median(age))
USoc %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank()) + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") + theme_minimal()
##################  There is, at first sight, no relationship between living in an urban area
##################  and being admitted to hospital
USoc %>% ddply(., "urban", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(urban), y=rate.inpatient, fill=factor(urban))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=2) + labs(fill = "Living in urban area") + xlab("Living in urban area") + ylab("%") + ggtitle("% requiring inpatient care next 12m") + theme_minimal()
#What if we had more precise data on distance to the nearest GP/Hospital, would we find the same thing?
#We don't know where people live in this version of the dataset, but we do have an urban/rural indicator
#So, as a thought experiment, let's impute postcodes to respondents based on that indicator
#####################################################################
################### LOOKUP TABLES FOR GEOGRAPHIES ###################
#####################################################################
################## Import directory of postcodes in the UK, Wales
Wales_postcodes_small <- fread("Welsh postcodes small.csv",header=TRUE, sep=",", check.names=T)
Wales_postcodes_small
USoc_urban <- filter(USoc,urban==1) %>% select(.,pidp)
USoc_urban
urban_postcodes <- filter(Wales_postcodes_small,urban==1)
urban_postcodes
nrow(USoc_urban)
sample(100,3, replace = TRUE, prob = NULL)
sample(100,10, replace = TRUE, prob = NULL)
sample(1:100,10, replace = TRUE, prob = NULL)
sample(1:3,10, replace = TRUE, prob = NULL)
sample(1:3,10, replace = TRUE, prob = NULL)
sample(1:3,10, replace = TRUE, prob = NULL)
sample(1:3,10, replace = TRUE, prob = NULL)
sample(1:3,10, replace = TRUE, prob = NULL)
sample(1:3,10, replace = TRUE, prob = NULL)
sample(1:3,10, replace = TRUE, prob = NULL)
sample(1:3,10, replace = TRUE, prob = NULL)
sample(1:3,10, replace = TRUE, prob = NULL)
sample(1:3,10, replace = TRUE, prob = NULL)
idx <- sample(1:3,10, replace = TRUE, prob = NULL)
idx
(1:3)[idx]
idx
urban_postcodes[idx,]
idx <- sample(1:3,10, replace = TRUE, prob = NULL)
urban_postcodes[idx,]
################## Import directory of postcodes in the UK, Wales
Wales_postcodes_small <- fread("Welsh postcodes small.csv",header=TRUE, sep=",", check.names=T)
################## Sample urban postcodes for USoc dataset (with replacement)
USoc_urban <- filter(USoc,urban==1) %>% select(.,pidp)
urban_postcodes <- filter(Wales_postcodes_small,urban==1)
samples_postcodes_urban_idx <- sample(1:nrow(urban_postcodes),nrow(USoc_urban), replace = TRUE, prob = NULL)
USoc_imputed_pcode_urban <- urban_postcodes[samples_postcodes_urban_idx,] %>% select(.,pcode) %>% cbind.data.frame(.,USoc_urban)
################## Sample rural postcodes for USoc dataset (with replacement)
USoc_rural <- filter(USoc,urban==0) %>% select(.,pidp)
rural_postcodes <- filter(Wales_postcodes_small,urban==0)
samples_postcodes_rural_idx <- sample(1:nrow(rural_postcodes),nrow(USoc_rural), replace = TRUE, prob = NULL)
USoc_imputed_pcode_rural <- urban_postcodes[samples_postcodes_rural_idx,] %>% select(.,pcode) %>% cbind.data.frame(.,USoc_rural)
################## Dataset of imputed postcodes
imputed_postcodes <- rbind(USoc_imputed_pcode_urban,USoc_imputed_pcode_rural) %>% as.data.table()
imputed_postcodes
nrow(imputed_postcodes)
nrow(imputed_postcodes)
length(unique(imputed_postcodes$pcode))
rm(list = ls())
USoc <- fread("Understanding-Society-Wave8.csv", header=TRUE, sep=",", check.names=T) %>%
filter(.,gor_dv=="[10] wales") %>% as_tibble()
skim(USoc)
round(mean(USoc$inpatient_nexttyear)*100,1)
##################  The median age of those who went to hospital was 6 years higher
mu_age <- ddply(USoc, "inpatient_nexttyear", summarise, age.median=median(age))
USoc %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank()) + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
##################  The median age of those who went to hospital was 6 years higher
mu_age <- ddply(USoc, "inpatient_nexttyear", summarise, age.median=median(age))
USoc %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank()) + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) +
theme(legend.position="bottom") +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
USoc
USoc_male <- fread("Understanding-Society-Wave8.csv", header=TRUE, sep=",", check.names=T) %>%
filter(.,gor_dv=="[10] wales")&male==1 %>% as_tibble()
USoc_male <- fread("Understanding-Society-Wave8.csv", header=TRUE, sep=",", check.names=T) %>%
filter(.,gor_dv=="[10] wales"&male==1) %>% as_tibble()
##################  The median age of those who went to hospital was 6 years higher
mu_age <- ddply(USoc_male, "inpatient_nexttyear", summarise, age.median=median(age))
USoc_male %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank()) + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) +
theme(legend.position="bottom") + scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
USoc <- fread("Understanding-Society-Wave8.csv", header=TRUE, sep=",", check.names=T) %>%
filter(.,gor_dv=="[10] wales") %>% as_tibble()
skim(USoc)
##################  The median age of those who went to hospital was 6 years higher
mu_age <- ddply(USoc_male, "inpatient_nexttyear", summarise, age.median=median(age))
USoc_male %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank()) + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) +
theme(legend.position="bottom") + scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
##################  The median age of those who went to hospital was 6 years higher
mu_age <- ddply(USoc, "inpatient_nexttyear", summarise, age.median=median(age))
USoc %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank()) + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) +
theme(legend.position="bottom") + scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
##################  The median age of those who went to hospital was 6 years higher
##################  Another peak in 20's (in men and women)
mu_age <- ddply(USoc, "inpatient_nexttyear", summarise, age.median=median(age))
USoc %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank()) + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) +
theme(legend.position="bottom") + scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
##################  The median age of those who went to hospital was 6 years higher
##################  Another peak in 20's (in both men and women)
mu_age <- ddply(USoc, "inpatient_nexttyear", summarise, age.median=median(age))
USoc %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank()) + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) +
theme(legend.position="bottom") + scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") + theme_minimal()
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") + theme_minimal(legend.position="bottom")
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") + theme(legend.position="bottom")
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),legend.position="bottom")
##################  There is, at first sight, no relationship between living in an urban area
##################  and being admitted to hospital
USoc %>% ddply(., "urban", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(urban), y=rate.inpatient, fill=factor(urban))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=2) + labs(fill = "Living in urban area") + xlab("Living in urban area") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(plot.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),legend.position="bottom")
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(plot.background = element_blank(),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.border = element_blank(),legend.position="bottom")
##################  The median age of those who went to hospital was 6 years higher
##################  Another peak in 20's (in both men and women)
mu_age <- ddply(USoc, "inpatient_nexttyear", summarise, age.median=median(age))
USoc %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank()) + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) +
theme(legend.position="bottom") + scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
##################  The median age of those who went to hospital was 6 years higher
##################  Another peak in 20's (in both men and women)
mu_age <- ddply(USoc, "inpatient_nexttyear", summarise, age.median=median(age))
USoc %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank(),legend.position="bottom") + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) + scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(panel.background = element_blank(),legend.position="bottom")
##################  There is, at first sight, no relationship between living in an urban area
##################  and being admitted to hospital
USoc %>% ddply(., "urban", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(urban), y=rate.inpatient, fill=factor(urban))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=2) + labs(fill = "Living in urban area") + xlab("Living in urban area") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(panel.background = element_blank(),legend.position="bottom")
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=1.5)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(panel.background = element_blank(),legend.position="bottom")
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient+ 0.05), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(panel.background = element_blank(),legend.position="bottom")
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient+ 2), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(panel.background = element_blank(),legend.position="bottom")
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient+ 4), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(panel.background = element_blank(),legend.position="bottom")
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(panel.background = element_blank(),legend.position="bottom")
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient, y = rate.inpatient + 2), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(panel.background = element_blank(),legend.position="bottom")
##################  Those with a pre-existing long-term health condition had a 14% likelhood of
##################  requiring inpatient care in the next 12m - compared to only 7% in those without one
USoc %>% ddply(., "LT_health", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(LT_health), y=rate.inpatient, fill=factor(LT_health))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient, y = rate.inpatient + 1), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=1) + labs(fill = "Long-term health condition") + xlab("Long-term health condition") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(panel.background = element_blank(),legend.position="bottom")
##################  There is, at first sight, no relationship between living in an urban area
##################  and being admitted to hospital
USoc %>% ddply(., "urban", summarise, rate.inpatient=mean(inpatient_nexttyear)*100) %>% round(.,1) %>%
ggplot(., aes(x=factor(urban), y=rate.inpatient, fill=factor(urban))) +
geom_bar(stat="identity") + geom_text(aes(label=rate.inpatient, y = rate.inpatient + 1), position=position_dodge(width=0.9)) +
scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=2) + labs(fill = "Living in urban area") + xlab("Living in urban area") + ylab("%") + ggtitle("% requiring inpatient care next 12m") +
theme(panel.background = element_blank(),legend.position="bottom")
##################  The median age of those who went to hospital was 6 years higher
##################  Another peak in 20's (in both men and women)
mu_age <- ddply(USoc, "inpatient_nexttyear", summarise, age.median=median(age))
USoc %>% ggplot(., aes(x=age, fill=factor(inpatient_nexttyear), color=factor(inpatient_nexttyear))) +
geom_density(alpha=0.5) + theme(panel.background = element_blank(),legend.position="bottom") + ggtitle("Distribution of age") +
geom_vline(data=mu_age, aes(xintercept=age.median, color=factor(inpatient_nexttyear)),
linetype="dashed") + scale_colour_brewer(type="qual",labels = c("No", "Yes"),palette=4) + scale_fill_brewer(type="qual",labels = c("No", "Yes"),palette=4) + labs(fill = "Inpatient care next 12m",col="Inpatient care next 12m")
rm(mu_age)
rm(list = ls())
